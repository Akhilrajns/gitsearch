# Generated by Django 2.1.1 on 2018-09-15 15:04

from django.db import migrations, models
import user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='GithubUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('login', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Login')),
                ('is_staff', models.BooleanField(db_index=True, default=False, help_text='Designates', verbose_name='Staff Status')),
                ('followers_url', models.CharField(blank=True, max_length=255, verbose_name='Followers URL')),
                ('following_url', models.CharField(blank=True, max_length=255, verbose_name='Following URL')),
                ('gists_url', models.CharField(blank=True, max_length=255, verbose_name='Gists URL')),
                ('received_events_url', models.CharField(blank=True, max_length=255, verbose_name='Received events URL')),
                ('url', models.CharField(blank=True, max_length=255, verbose_name='URL')),
                ('type', models.CharField(blank=True, max_length=255, verbose_name='Type')),
                ('score', models.DecimalField(decimal_places=6, max_digits=10, verbose_name='Score')),
                ('avatar_url', models.CharField(blank=True, max_length=255, verbose_name='Avatar URL')),
                ('events_url', models.CharField(blank=True, max_length=255, verbose_name='Events URL')),
                ('gravatar_id', models.CharField(blank=True, max_length=255, verbose_name='Gravatar ID')),
                ('organizations_url', models.CharField(blank=True, max_length=255, verbose_name='Organizations URL')),
                ('starred_url', models.CharField(blank=True, max_length=255, verbose_name='Starred URL')),
                ('html_url', models.CharField(blank=True, max_length=255, verbose_name='Html URL')),
                ('subscriptions_url', models.CharField(blank=True, max_length=255, verbose_name='Subscriptions URL')),
                ('site_admin', models.BooleanField(default=False, verbose_name='Siteadmin')),
                ('repos_url', models.CharField(blank=True, max_length=255, verbose_name='Repos URL')),
                ('node_id', models.CharField(blank=True, max_length=255, verbose_name='Node id')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', user.models.GithubUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ApiSearchDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_params', models.CharField(blank=True, max_length=255, verbose_name='Query params')),
                ('api_response', models.TextField(verbose_name='Api response')),
                ('response_processed', models.BooleanField(default=False, verbose_name='Processed')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
            ],
        ),
    ]
